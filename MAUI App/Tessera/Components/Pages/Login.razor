@page "/login"
@inject IAuthService AuthService
@inject NavigationManager Navigation
@using Tessera_Models


@if (AuthService.IsAuthenticated)
{
    <p>You are already logged in.</p>
}
else
{
    <div class="auth-container">
        <div class="input-container">
            <input type="text" id="input" required="" @bind="Email">
            <label for="input" class="label">Email</label>
            <div class="underline"></div>
        </div>
        <div class="input-container">
            <input type="text" id="input" required="" @bind="Password">
            <label for="input" class="label">Password</label>
            <div class="underline"></div>
        </div>
        <button class="btn-primary" @onclick="LoginAsync">Login</button>
        <button class="cus-btn-secondary" @onclick="SwitchToRegister">Register</button>
        <p>@LoginError</p>
    </div>
}

@code {
    [Parameter] public EventCallback OnSwitchToRegister { get; set; }

    private string Email { get; set; }
    private string Password { get; set; }
    private string LoginError { get; set; }

    private async Task LoginAsync()
    {
        var model = new LoginDefaultModel
        {
            Email = Email,
            Password = Password,
            RememberMe = false
        };

        bool result = await AuthService.Login(model);

        if (result)
        {
            Navigation.NavigateTo("/"); // Redirect to dashboard or another page on successful login
        }
        else
        {
            LoginError = "Login failed. Please check your credentials.";
        }
    }

    private async Task SwitchToRegister()
    {
        if (OnSwitchToRegister.HasDelegate)
        {
            await OnSwitchToRegister.InvokeAsync(null);
        }
    }
}
