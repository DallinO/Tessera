@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop

@if (showOverlay)
{
    <button class="modal-overlay">
        <div class="modal-dialog debug-border-1" @onmouseenter="DisableButton" @onmouseleave="EnableButton">
            <div class="modal-header">
                <h5 class="modal-title">Modal Title</h5>
                <button type="button" class="close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Modal body content goes here -->
                <p>This is the modal body content.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </button>
}

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private bool showOverlay = false;
    private bool isButtonDisabled = true;
    private ElementReference modalContentRef;

    public bool IsVisible() => showOverlay;

    public void Show()
    {
        showOverlay = true;
        StateHasChanged();
    }

    public void Close()
    {
        showOverlay = false;
        StateHasChanged();
        OnClose.InvokeAsync();
    }

    private void OnOverlayClick()
    {
        Close();
    }

    public void DisableButton()
    {
        isButtonDisabled = true;
        StateHasChanged();
    }
    
    public void EnableButton()
    {
        isButtonDisabled = false;
        StateHasChanged();
    }
}

