@namespace Tessera.Web.Layout

@inject IBookService Book
@inject IApiService Api
@inject IViewService View
@inject NavigationManager Navigation

<div class="ts-top-row ts-sidebar-top">
    <div class="ts-sidebar-top-content">
        <div class="ts-sidebar-top-content-item">
            <BookButton OpenModal="OpenAddChapterModal"/>
        </div>
    </div>
</div>

<div class="ts-nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="ts-nav-column">
        <div class="ts-nav-scrollable-item">
            @for (int i = 0; i < Book.Chapters.Count; i++)
            {
                ChapterDto chapter = Book.Chapters[i];

                <ChapterButton ButtonId="@View.ButtonIdGen()"
                               Chapter="chapter"
                               ChapterIndex="i"
                               />
            }
        </div>
    </nav>
</div>

<AddChapter @ref="addChapterModal" OnAddChapter="AddChapter" />

@code {
    private AddChapter addChapterModal;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Book.BookId == 0)
        {
            var bookResponse = await Api.GetBookIdAsync();
            if (bookResponse.Success)
            {
                Book.BookId = bookResponse.BookId;
            }
            else
            {
                Navigation.NavigateTo("/login");
            }
        }
        
        var chapterResponse = await Api.GetChaptersAsync(Book.BookId);
        if (chapterResponse.Success)
        {
            Book.Chapters = chapterResponse.Chapters;
        }
        else
        {
            Navigation.NavigateTo("/login");
        }
    }

      
    private void OpenAddChapterModal()
    {
        addChapterModal.OpenModal();
    }

    private void AddLeaf(LeafDto leaf)
    {
        if (leaf != null)
        {
            Book.SelectedChapter.Contents.Add(leaf);
            StateHasChanged();
        }
    }

    private void AddChapter(AddChapterRequest chapter)
    {
        if (chapter != null)
        {
            var response = Api.CreateChapterAsync(chapter);
            StateHasChanged();
        }
    }
}
