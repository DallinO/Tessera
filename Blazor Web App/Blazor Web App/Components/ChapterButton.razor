@namespace Tessera.Web

@inject IViewService ViewService
@inject IBookService Book
@inject NavigationManager Navigation
@inject IJSRuntime JS

<button class="ts-basic-button" id="@ButtonId" @onclick="ToggleColor">
    <div class="ts-inner-button-container">
        <img src="caret_right_fill.svg" alt="caret right" />
    </div>
    <div class="ts-basic-button-text">@Chapter.Title</div>
    <div class="ts-filler"></div>
    <div class="ts-inner-button-container">
        <button class="ts-inner-button" @onclick="OpenSettings">
            <img src="three_dots_horizontal.svg" alt="three dots" />
        </button>
    </div>
</button>

<ChapterSettings @ref="chapterSettings" 
    Title="@Chapter.Title" 
    Description="@Chapter.Description" 
    OnOpenSettings="OpenSettings"
    />

@code {
    [Parameter] public ChapterDto Chapter { get; set; }
    [Parameter] public int ChapterIndex { get; set; }
    [Parameter] public Action OnOpenAddMenu { get; set; }
    [Parameter] public string ChapterIcon { get; set; }
    [Parameter] public string ButtonId { get; set; }

    private ChapterSettings chapterSettings;

    private bool showLeaves = false;

    private void OpenAddMenu()
    {
        Book.SelectedChapter = Book.Chapters[ChapterIndex];
        OnOpenAddMenu.Invoke();
    }

    private void OpenSettings()
    {
        Book.SelectedChapter = Book.Chapters[ChapterIndex];
        chapterSettings.isVisible = true;
    }

    private async Task ToggleColor()
    {
        await JS.InvokeVoidAsync("toggleButtonColor", ButtonId);
        Navigation.NavigateTo($"/b/{Book.BookId}/d/{Chapter.Id}");
    }

    private string BuildIconPath(string leafName)
    {
        return $"{leafName.ToLower()}.svg";
    }
}