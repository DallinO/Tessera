@namespace Tessera.Web

@inject ILibraryService Library
@inject IApiService Api
@inject NavigationManager Navigation


@page "/{BookId:int}/cs/{LeafId:int}"


@* Title Section *@

<div class="ts-customer-page">
    @* Action *@
    <h2>Customer Information</h2>
    <div class="ts-customer-page-header">
        <button class="ts-primary-btn" @onclick="OpenModal">Add Customer</button>
        <AddCustomer @ref="addCustomer" />
    </div>
    @* Table *@
    <div class="ts-customer-table-container">
        <table class="ts-customer-table">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Address</th>
                    <th>Contact Info</th>
                </tr>
            </thead>
            <tbody>
                @foreach (CustomerDto customer in CustomerList.Customers)
                {
                    <tr>
                        <td>@customer.FirstName</td>
                        <td>@customer.LastName</td>
                        <td>@customer.Address.GetAddressString()</td>
                        <td>
                            <select @bind="customer.SelectedContact">
                                <option value="Work">Work</option>
                                <option value="Cell">Cell</option>
                                <option value="Home">Home</option>
                            </select>
                            <div>
                                @GetContactNumber(customer)
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    [Parameter] public CustomerListDto CustomerList {get; set;}
    [Parameter] public int BookId {get; set;}
    [Parameter] public int LeafId {get; set;}

    private AddCustomer addCustomer;

    protected override void OnInitialized()
    {

        base.OnInitialized();
    }

    private async Task LoadPageDataAsync()
    {
        if (Library.HasBook)
        {
            if (Library.CurrBook.Id != BookId)
            {
                foreach (BookDto book in Library.Books)
                {
                    if (book.Id == BookId)
                    {
                        Library.CurrBook = book;
                    }
                }
            }

        }
        else
        {
            Navigation.NavigateTo("/home");
        }
    }

    private void OpenModal()
    {
        addCustomer.OpenModal();
    }

    private string GetContactNumber(CustomerDto customer)
    {
        return customer.SelectedContact switch
        {
            "Work" => customer.WorkNumber.ToString(),
            "Cell" => customer.CellNumber.ToString(),
            "Home" => customer.HomeNumber.ToString(),
            _ => "No contact selected"
        };
    }


}