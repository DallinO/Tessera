@namespace Tessera.Web.Pages

@inject IBookService Library
@inject IApiService Api
@inject NavigationManager Navigation

@page "/login"

<div class="ts-auth-page">
    <div class="ts-auth-container">
        <div class="ts-auth-container-item-top">
            <div class="ts-label-container">
                <label for="email-input" class="ts-label">Email</label>
            </div>
            <div class="ts-input-container">
                <input class="ts-primary-input" type="text" id="email-input" required="" @bind="Email">
            </div>
        </div>
        <div class="ts-auth-container-item">
            <div class="ts-label-container">
                <label for="pw-input" class="ts-label">Password</label>
            </div>
            <div class="ts-input-container">
                <input class="ts-primary-input" type="text" id="pw-input" required="" @bind="Password">
            </div>
        </div>
        <div class="ts-auth-container-item">
            <button class="ts-primary-btn" @onclick="LoginAsync">Login</button>
        </div>
        <div class="ts-auth-container-btn-container">
            <button class="ts-secondary-btn" @onclick="SwitchToRegister">Register</button>
        </div>
        <div class="ts-auth-container-item">
            <p class="ts-auth-errors">@LoginError</p>
        </div>
    </div>
</div>

@code {
    private string Email { get; set; } = "td1@test.com";
    private string Password { get; set; } = "Test@123";
    private MarkupString LoginError { get; set; }


    private async Task LoginAsync()
    {
        var model = new LoginRequest
        {
            Email = Email,
            Password = Password,
            RememberMe = false
        };

        var login = await Api.LoginAsync(model);

        if (login.Success)
        {
            Navigation.NavigateTo("/bookoverview");
        }
        else
        {
            StringBuilder errorMessage = new();
            foreach (string error in login.Errors)
            {
                errorMessage.AppendLine(string.Join("<br />", error));
                errorMessage.Append("<br />");
            }
            LoginError = new MarkupString(errorMessage.ToString());
        }
    }

    private void SwitchToRegister()
    {
        Navigation.NavigateTo("/register");
    }
}